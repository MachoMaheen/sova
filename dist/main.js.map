{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;AACb,iBAAiB,mBAAO,CAAC,0BAAU;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,0BAAU;AACrC,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,wBAAwB,mBAAO,CAAC,cAAI;AACpC,wBAAwB,mBAAO,CAAC,cAAI;AACpC,yBAAyB,mBAAO,CAAC,gBAAK;AACtC,0CAA0C,mBAAO,CAAC,gEAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,CAAC;;;;;;;;;;;AC/JD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://file-explorer/./node_modules/electron-is-dev/index.js","webpack://file-explorer/./src/main/index.ts","webpack://file-explorer/external node-commonjs \"electron\"","webpack://file-explorer/external node-commonjs \"fs\"","webpack://file-explorer/external node-commonjs \"os\"","webpack://file-explorer/external node-commonjs \"path\"","webpack://file-explorer/external node-commonjs \"url\"","webpack://file-explorer/webpack/bootstrap","webpack://file-explorer/webpack/before-startup","webpack://file-explorer/webpack/startup","webpack://file-explorer/webpack/after-startup"],"sourcesContent":["'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = Number.parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !electron.app.isPackaged;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst electron_1 = require(\"electron\");\nconst path = __importStar(require(\"path\"));\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst url = __importStar(require(\"url\"));\nconst electron_is_dev_1 = __importDefault(require(\"electron-is-dev\"));\n// Keep a global reference of the window object to prevent garbage collection\nlet mainWindow = null;\nfunction createWindow() {\n    // Create the browser window\n    mainWindow = new electron_1.BrowserWindow({\n        width: 900,\n        height: 700,\n        webPreferences: {\n            nodeIntegration: false,\n            contextIsolation: true,\n            preload: path.join(__dirname, 'preload.js')\n        }\n    });\n    // Load app\n    const startUrl = electron_is_dev_1.default\n        ? 'http://localhost:3000'\n        : url.format({\n            pathname: path.join(__dirname, '../renderer/index.html'),\n            protocol: 'file:',\n            slashes: true,\n        });\n    mainWindow.loadURL(startUrl);\n    // Open the DevTools in development mode\n    if (electron_is_dev_1.default) {\n        mainWindow.webContents.openDevTools();\n    }\n    // Emitted when the window is closed\n    mainWindow.on('closed', () => {\n        mainWindow = null;\n    });\n}\n// Create window when app is ready\nelectron_1.app.whenReady().then(createWindow);\n// Quit when all windows are closed, except on macOS\nelectron_1.app.on('window-all-closed', () => {\n    if (process.platform !== 'darwin') {\n        electron_1.app.quit();\n    }\n});\nelectron_1.app.on('activate', () => {\n    if (mainWindow === null) {\n        createWindow();\n    }\n});\n// IPC Event handlers\nelectron_1.ipcMain.handle('list-directory', async (_, dirPath) => {\n    try {\n        // If no path is provided, use the home directory as default\n        const directory = dirPath || os.homedir();\n        const files = await fs.promises.readdir(directory);\n        const fileStats = await Promise.all(files.map(async (file) => {\n            const filePath = path.join(directory, file);\n            try {\n                const stats = await fs.promises.stat(filePath);\n                return {\n                    name: file,\n                    path: filePath,\n                    isDirectory: stats.isDirectory(),\n                    size: stats.size,\n                    created: stats.birthtime,\n                    modified: stats.mtime,\n                };\n            }\n            catch (error) {\n                // Handle permissions errors gracefully\n                return {\n                    name: file,\n                    path: filePath,\n                    isDirectory: false,\n                    size: 0,\n                    created: new Date(),\n                    modified: new Date(),\n                    error: 'Permission denied'\n                };\n            }\n        }));\n        return {\n            path: directory,\n            files: fileStats\n        };\n    }\n    catch (error) {\n        console.error('Error listing directory:', error);\n        return { error: error.message };\n    }\n});\n// Handle file deletion\nelectron_1.ipcMain.handle('delete-file', async (_, filePath) => {\n    try {\n        // Confirm if path exists\n        await fs.promises.access(filePath);\n        // Check if it's a directory or a file\n        const stats = await fs.promises.stat(filePath);\n        if (stats.isDirectory()) {\n            await fs.promises.rmdir(filePath, { recursive: true });\n        }\n        else {\n            await fs.promises.unlink(filePath);\n        }\n        return { success: true };\n    }\n    catch (error) {\n        console.error('Error deleting file:', error);\n        // Handle permission errors specifically\n        if (error.code === 'EACCES') {\n            // For Linux/macOS, we could use sudo but that would require a more complex setup\n            return {\n                error: 'Permission denied. This file requires elevated privileges to delete.',\n                requiresElevation: true\n            };\n        }\n        return { error: error.message };\n    }\n});\n// Handle selecting a directory using system dialog\nelectron_1.ipcMain.handle('select-directory', async () => {\n    if (!mainWindow)\n        return { canceled: true };\n    const result = await electron_1.dialog.showOpenDialog(mainWindow, {\n        properties: ['openDirectory']\n    });\n    if (!result.canceled && result.filePaths.length > 0) {\n        return { path: result.filePaths[0] };\n    }\n    return { canceled: true };\n});\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main/index.ts\");\n",""],"names":[],"sourceRoot":""}